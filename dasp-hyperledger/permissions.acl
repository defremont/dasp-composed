  /*
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */

  /**
  * Sample access control list.
  */


  
  rule AuthorCanAllTroughAnyT {
      description: "Allow all author access to resources from ReviewRejected"
      participant: "org.dasp.net.Author"
      operation: ALL
      resource: "org.dasp.net.Details"
      transaction: "org.dasp.net.**"
      action: ALLOW
  }
  rule AuthorCanUpdateChangePassword {
      description: "Allow all author access to resources from scheduler"
      participant: "org.dasp.net.Author"
      operation: UPDATE
      resource: "org.dasp.net.Author"
      transaction: "org.dasp.net.ChangePassword"
      action: ALLOW
  }
  rule AuthorCanCreateChangePassword {
      description: "Allow all author to change your password"
      participant(a): "org.dasp.net.Author"
      operation: CREATE
      resource(tx): "org.dasp.net.ChangePassword"
      condition: (a.details.password == tx.oldPassword)
      action: ALLOW
  }
  rule AuthorCanCreateScheduler {
      description: "Allow all author to reschedule your article revisions"
      participant(a): "org.dasp.net.Author"
      operation: CREATE
      resource(tx): "org.dasp.net.Scheduler"
      condition: (!tx.revision.complete && tx.revision.article.author.getIdentifier() == a.getIdentifier())
      action: ALLOW
  }
  rule AuthorCanAllRevisionFromScheduler {
      description: "Allow all author access to resources from scheduler"
      participant: "org.dasp.net.Author"
      operation: UPDATE, READ
      resource: "org.dasp.net.Revision"
      transaction: "org.dasp.net.Scheduler"
      action: ALLOW
  }
  rule AuthorCanReadAuthorFromScheduler {
      description: "Allow all author access to resources from scheduler"
      participant: "org.dasp.net.Author"
      operation: READ
      resource: "org.dasp.net.Author"
      transaction: "org.dasp.net.Scheduler"
      action: ALLOW
  }
  rule AuthorCanReadArticleFromScheduler {
      description: "Allow all author access to resources from scheduler"
      participant: "org.dasp.net.Author"
      operation: READ
      resource: "org.dasp.net.Article"
      transaction: "org.dasp.net.Scheduler"
      action: ALLOW
  }
  rule AuthorCanUpdateAuthorFromCreateRevision {
      description: "Allow all author access to resources from CreateRevision"
      participant: "org.dasp.net.Author"
      operation: UPDATE, READ
      resource: "org.dasp.net.Author"
      transaction: "org.dasp.net.CreateRevision"
      action: ALLOW
  }
  rule AuthorCanUpdateArticleFromCreateRevision {
      description: "Allow all author access to resources from CreateRevision"
      participant: "org.dasp.net.Author"
      operation: UPDATE, READ
      resource: "org.dasp.net.Article"
      transaction: "org.dasp.net.CreateRevision"
      action: ALLOW
  }
  rule AuthorCanCreateRevision {
      description: "Allow all author access to resources from CreateRevision"
      participant: "org.dasp.net.Author"
      operation: CREATE, READ
      resource: "org.dasp.net.Revision"
      transaction: "org.dasp.net.CreateRevision"
      action: ALLOW
  }
  rule AuthorCanCreateRevisionTx{
      description: "Allow all author access to CreateRevision"
      participant(a): "org.dasp.net.Author"
      operation: CREATE
      resource(r): "org.dasp.net.CreateRevision"
      condition: (r.article.author.getIdentifier() == a.getIdentifier() && r.article.revCount == 0)
      action: ALLOW
  }
  rule AuthorCanUpdateRevisionFromPublishRevision {
      description: "Allow all author access to resources from PublishRevision"
      participant: "org.dasp.net.Author"
      operation: UPDATE, READ
      resource: "org.dasp.net.Revision"
      transaction: "org.dasp.net.PublishRevision"
      action: ALLOW
  }
  rule AuthorCanPublishRevision {
      description: "Allow all author access to PublishRevision"
      participant(a): "org.dasp.net.Author"
      operation: CREATE
      resource(tx): "org.dasp.net.PublishRevision"
      condition: (tx.revision.complete &&  tx.revision.article.author.getIdentifier() == a.getIdentifier())
      action: ALLOW
  }
  rule AuthorCanCreateRateRevision {
      description: "Allow all author access to resources from RateRevision"
      participant(a): "org.dasp.net.Author"
      operation: CREATE
      resource(r): "org.dasp.net.RateRevision"
      condition: (r.revision.reviewer.getIdentifier() == a.getIdentifier() && !r.revision.complete)
      action: ALLOW
  }
  rule AuthorCanReadArticleFromRateRevision {
      description: "Allow all author access to resources from RateRevision"
      participant: "org.dasp.net.Author"
      operation: UPDATE, READ
      resource: "org.dasp.net.Article"
      transaction: "org.dasp.net.RateRevision"
      action: ALLOW
  }
  rule AuthorCanReadAuthorFromRateRevision {
      description: "Allow all author access to resources from RateRevision"
      participant: "org.dasp.net.Author"
      operation: UPDATE, READ
      resource: "org.dasp.net.Author"
      transaction: "org.dasp.net.RateRevision"
      action: ALLOW
  }
  rule AuthorCanUpdateRevisionFromRateRevision {
      description: "Allow all author access to resources from RateRevision"
      participant: "org.dasp.net.Author"
      operation: UPDATE
      resource: "org.dasp.net.Revision"
      transaction: "org.dasp.net.RateRevision"
      action: ALLOW
  }
  rule AuthorCanReadRevisionFromReject {
      description: "Allow all author access to resources from ReviewRejected"
      participant: "org.dasp.net.Author"
      operation: READ, UPDATE
      resource: "org.dasp.net.Revision"
      transaction: "org.dasp.net.ReviewRejected"
      action: ALLOW
  }
  rule AuthorCanReadAuthorFromReject {
      description: "Allow all author access to resources from ReviewRejected"
      participant: "org.dasp.net.Author"
      operation: READ
      resource: "org.dasp.net.Author"
      transaction: "org.dasp.net.ReviewRejected"
      action: ALLOW
  }
  rule AuthorCanReadArticleFromReject {
      description: "Allow all author access to resources from ReviewRejected"
      participant: "org.dasp.net.Author"
      operation: READ
      resource: "org.dasp.net.Article"
      transaction: "org.dasp.net.ReviewRejected"
      action: ALLOW
  }
  rule AuthorCanCreateReviewRejected{
      description: "Allow all author access to resources from ReviewRejected"
      participant(a): "org.dasp.net.Author"
      operation: CREATE
      resource(r): "org.dasp.net.ReviewRejected"
      condition: (r.revision.reviewer.getIdentifier() == a.getIdentifier() || r.revision.article.author.getIdentifier() == a.getIdentifier() && !r.revision.acc)
      action: ALLOW
  }
  rule AuthorCanCreateReviewAccept{
      description: "Allow all author access to ReviewAccept"
      participant(a): "org.dasp.net.Author"
      operation: CREATE
      resource(r): "org.dasp.net.ReviewAccept"
      condition: (r.revision.reviewer.getIdentifier() == a.getIdentifier() && !r.revision.acc)
      action: ALLOW
  }
  rule AuthorCanUpdateRevisionFromReviewAccept{
      description: "Allow all author access to resources from ReviewAccept"
      participant: "org.dasp.net.Author"
      operation: UPDATE
      resource: "org.dasp.net.Revision"
      transaction: "org.dasp.net.ReviewAccept"
      action: ALLOW
  }

  rule AuthorCanCreaterticleFromNewArticle {
      description: "Allow all author access to resources from NewArticle"
      participant: "org.dasp.net.Author"
      operation: CREATE
      resource: "org.dasp.net.Article"
      transaction: "org.dasp.net.NewArticle"
      action: ALLOW
  }
  rule AuthorCanCreateNewArticle{
      description: "Allow all author access to NewArticle"
      participant: "org.dasp.net.Author"
      operation: CREATE
      resource: "org.dasp.net.NewArticle"
      action: ALLOW
  }
  rule AuthorCanCreateNewhash {
      description: "Allow all author access to NewHash"
      participant(a): "org.dasp.net.Author"
      operation: CREATE
      resource(r): "org.dasp.net.NewHash"
      condition: (r.article.author.getIdentifier() == a.getIdentifier() && r.article.needRev == true)
      action: ALLOW
  }
  rule AuthorCanUpdateArticleFromNewHash {
      description: "Allow all author access to resources from NewHash"
      participant: "org.dasp.net.Author"
      operation: UPDATE
      resource: "org.dasp.net.Article"
      transaction: "org.dasp.net.NewHash"
      action: ALLOW
  }
  rule ComunityCanReadPublishedArticles {
      description: "Allow all participants read access to all articles that is published"
      participant: "org.dasp.net.**"
      operation: READ
      resource(r): "org.dasp.net.Article"
      condition: (r.published == true)
      action: ALLOW
  }

  rule AuthorCanReadAuthor {
      description: "Allow all author read access to own resources"
      participant(a): "org.dasp.net.Author"
      operation: READ
      resource(r): "org.dasp.net.Author"
      condition: (r.getIdentifier() == a.getIdentifier())
      action: ALLOW
  }

  rule AuthorCanReadArticle {
      description: "Allow all author read access to own resources"
      participant(a): "org.dasp.net.Author"
      operation: READ
      resource(r): "org.dasp.net.Article"
      condition: (r.author.getIdentifier() == a.getIdentifier())
      action: ALLOW
  }
  rule AuthorCanReadDetails {
      description: "Allow all author read access to own resources"
      participant(a): "org.dasp.net.Author"
      operation: READ
      resource(r): "org.dasp.net.Details"
      condition: (r.getIdentifier() == a.details.getIdentifier())
      action: ALLOW
  }

  rule AuthorCanAllTroughAny {
      description: "Allow all author access to resources from ReviewRejected"
      participant: "org.dasp.net.Author"
      operation: ALL
      resource: "org.dasp.net.Details"
      transaction: "org.dasp.net.**"
      action: ALLOW
  }
  rule AuthorCanReadRevision {
      description: "Allow all author read access to own resources"
      participant(a): "org.dasp.net.Author"
      operation: READ
      resource(r): "org.dasp.net.Revision"
      condition: (r.reviewer.getIdentifier() == a.getIdentifier())
      action: ALLOW
  }
  rule AuthorCanReadAuthorRevision {
      description: "Allow all author read access to own resources"
      participant(a): "org.dasp.net.Author"
      operation: READ
      resource(r): "org.dasp.net.Revision"
      condition: (r.article.author.getIdentifier() == a.getIdentifier())
      action: ALLOW
  }
  rule NetworkAdminUserCanReadAuthors {
      description: "Grant business network administrators full access to NewAuthor"
      participant: "org.hyperledger.composer.system.NetworkAdmin"
      operation: READ
      resource: "org.dasp.net.Author"
      action: ALLOW
  } 
  rule NetworkAdminUserCanReadPublicArticles {
      description: "Grant business network administrators full access to NewAuthor"
      participant: "org.hyperledger.composer.system.NetworkAdmin"
      operation: READ
      resource(r): "org.dasp.net.Article"
      condition: (r.published == true)
      action: ALLOW
  } 
  rule NetworkAdminUserCreateNewAuthor {
      description: "Grant business network administrators full access to NewAuthor"
      participant: "org.hyperledger.composer.system.NetworkAdmin"
      operation: CREATE
      resource: "org.dasp.net.NewAuthor"
      action: ALLOW
  } 
  rule NetworkAdminUserLogIn {
      description: "Grant business network administrators full access to LogIn"
      participant(p): "org.hyperledger.composer.system.NetworkAdmin"
      operation: CREATE
      resource(r): "org.dasp.net.LogIn"
      condition: (r.password == r.author.details.password)
      action: ALLOW
  } 
  rule NetworkAdminUserRecoverPass {
      description: "Grant business network administrators full access to RecoverPassword"
      participant: "org.hyperledger.composer.system.NetworkAdmin"
      operation: CREATE
      resource: "org.dasp.net.RecoverPassword"
      action: ALLOW
  } 
  rule AdminCanAllTroughAny {
      description: "Allow all author access to resources from ReviewRejected"
      participant: "org.hyperledger.composer.system.NetworkAdmin"
      operation: ALL
      resource: "org.dasp.net.Details"
      transaction: "org.dasp.net.**"
      action: ALLOW
  }
  rule AdminCanAllAuthorThroughAny {
      description: "Allow all author access to resources from ReviewRejected"
      participant: "org.hyperledger.composer.system.NetworkAdmin"
      operation: ALL
      resource: "org.dasp.net.Author"
      transaction: "org.dasp.net.**"
      action: ALLOW
  }
  rule SystemACL {
    description:  "System ACL to permit all access"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
  }
